// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Đồ_án.Areas.Admin.Models;

#nullable disable

namespace Đồ_án.Migrations
{
    [DbContext(typeof(KhuTroContext))]
    [Migration("20230727083527_Migration1")]
    partial class Migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DayTro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("soLuongPhong")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("tenDayTro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("dayTro");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DichVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("giaDichVu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tenDichVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("dichVu");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DichVuSuDung", b =>
                {
                    b.Property<int>("IDDichVu")
                        .HasColumnType("int");

                    b.Property<int>("IDPhong")
                        .HasColumnType("int");

                    b.HasKey("IDDichVu", "IDPhong");

                    b.HasIndex("IDPhong");

                    b.ToTable("dichVuSuDung");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DienNuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDPhong")
                        .HasColumnType("int");

                    b.Property<int>("dienTieuThu")
                        .HasColumnType("int");

                    b.Property<decimal>("giaDien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("giaNuoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("nuocTieuThu")
                        .HasColumnType("int");

                    b.Property<DateTime>("thoiGianHoaDon")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IDPhong");

                    b.ToTable("dienNuoc");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDThuePhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("soTienThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IDThuePhong");

                    b.ToTable("hoaDon");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.LoaiPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("gia")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tenLoaiPhong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("loaiPhong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.NguoiThue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CMND_CCCD")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("hoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ngaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("queQuan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("nguoiThue");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.Phong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDDayTro")
                        .HasColumnType("int");

                    b.Property<int>("IDLoaiPhong")
                        .HasColumnType("int");

                    b.Property<bool?>("conPhong")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("tenPhong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IDDayTro");

                    b.HasIndex("IDLoaiPhong");

                    b.ToTable("phong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("taiKhoan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("taiKhoan");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.ThuePhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDNguoiThue")
                        .HasColumnType("int");

                    b.Property<int>("IDPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayThue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngayTra")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("tienCoc")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IDNguoiThue");

                    b.HasIndex("IDPhong");

                    b.ToTable("thuePhong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DichVuSuDung", b =>
                {
                    b.HasOne("Đồ_án.Areas.Admin.Models.DichVu", "dichVu")
                        .WithMany("dichVuSuDung")
                        .HasForeignKey("IDDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DichVuSuDung_DichVu");

                    b.HasOne("Đồ_án.Areas.Admin.Models.Phong", "phong")
                        .WithMany("dichVuSuDung")
                        .HasForeignKey("IDPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DichVuSuDung_Phong");

                    b.Navigation("dichVu");

                    b.Navigation("phong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DienNuoc", b =>
                {
                    b.HasOne("Đồ_án.Areas.Admin.Models.Phong", "phong")
                        .WithMany("dienNuoc")
                        .HasForeignKey("IDPhong")
                        .IsRequired()
                        .HasConstraintName("FK_DienNuoc_Phong");

                    b.Navigation("phong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.HoaDon", b =>
                {
                    b.HasOne("Đồ_án.Areas.Admin.Models.ThuePhong", "thuePhong")
                        .WithMany("hoaDon")
                        .HasForeignKey("IDThuePhong")
                        .IsRequired()
                        .HasConstraintName("FK_HoaDon_ThuePhong");

                    b.Navigation("thuePhong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.Phong", b =>
                {
                    b.HasOne("Đồ_án.Areas.Admin.Models.DayTro", "dayTro")
                        .WithMany("phong")
                        .HasForeignKey("IDDayTro")
                        .IsRequired()
                        .HasConstraintName("FK_Phong_DayTro");

                    b.HasOne("Đồ_án.Areas.Admin.Models.LoaiPhong", "loaiPhong")
                        .WithMany("phong")
                        .HasForeignKey("IDLoaiPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Phong_LoaiPhong");

                    b.Navigation("dayTro");

                    b.Navigation("loaiPhong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.ThuePhong", b =>
                {
                    b.HasOne("Đồ_án.Areas.Admin.Models.NguoiThue", "nguoiThue")
                        .WithMany("thuePhong")
                        .HasForeignKey("IDNguoiThue")
                        .IsRequired()
                        .HasConstraintName("FK_ThuePhong_NguoiThue");

                    b.HasOne("Đồ_án.Areas.Admin.Models.Phong", "phong")
                        .WithMany("thuePhong")
                        .HasForeignKey("IDPhong")
                        .IsRequired()
                        .HasConstraintName("FK_ThuePhong_Phong");

                    b.Navigation("nguoiThue");

                    b.Navigation("phong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DayTro", b =>
                {
                    b.Navigation("phong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.DichVu", b =>
                {
                    b.Navigation("dichVuSuDung");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.LoaiPhong", b =>
                {
                    b.Navigation("phong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.NguoiThue", b =>
                {
                    b.Navigation("thuePhong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.Phong", b =>
                {
                    b.Navigation("dichVuSuDung");

                    b.Navigation("dienNuoc");

                    b.Navigation("thuePhong");
                });

            modelBuilder.Entity("Đồ_án.Areas.Admin.Models.ThuePhong", b =>
                {
                    b.Navigation("hoaDon");
                });
#pragma warning restore 612, 618
        }
    }
}
